name: Build & test

on:
  push:
    branches:
      - master
    tags:
      - v**.**
  pull_request:
    branches:
      - master

jobs:
  build-test-core:
    strategy:
      fail-fast: false
      matrix:
        build_profile: [clang20d, clang20r, gcc20d, gcc20r, msvc20d, msvc20r]
        include:
          - build_profile: clang20d
            conan_preset: clang-20-debug
            os: ubuntu-latest
          - build_profile: clang20r
            conan_preset: clang-20-release
            os: ubuntu-latest
          - build_profile: gcc20d
            conan_preset: gcc-20-debug
            os: ubuntu-latest
          - build_profile: gcc20r
            conan_preset: gcc-20-release
            os: ubuntu-latest
          - build_profile: msvc20d
            conan_preset: msvc-20-debug
            os: windows-latest
          - build_profile: msvc20r
            conan_preset: msvc-20-release
            os: windows-latest

    name: core-${{ matrix.build_profile }}
        
    runs-on: ${{matrix.os}}
    
    steps:
    - uses: actions/checkout@v4
    - uses: seanmiddleditch/gha-setup-ninja@v4
    - uses: seanmiddleditch/gha-setup-vsdevenv@master
    - run: pip install conan

    - name: Install native compilers
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo apt update

          sudo apt install gcc-13 g++-13
          sudo update-alternatives --remove-all gcc || true
          sudo update-alternatives --remove-all g++ || true
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 10 --slave /usr/bin/g++ g++ /usr/bin/g++-13

          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 17 clang

          sudo update-alternatives --remove-all clang || true
          sudo update-alternatives --remove-all clang++ || true
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-17 10 --slave /usr/bin/clang++ clang++ /usr/bin/clang++-17

    - name: Cache conan packages
      id: cache-conan
      uses: actions/cache@v3
      with:
        path: ~/.conan2/p
        key: conan-cache-packages-${{ matrix.build_profile }}

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      shell: bash
      env:
        PR: "${{github.workspace}}/.github/build_profiles/${{matrix.build_profile}}"
      run: |
        git clone https://github.com/petiaccja/asyncpp-conan.git
        conan create ./asyncpp-conan -pr $PR -pr:b $PR --version 0.2.2
        cmake -E make_directory "${{github.workspace}}/build"
        conan install "${{github.workspace}}" --build="*" -pr $PR -pr:b $PR
        conan cache clean
        cmake -S "${{github.workspace}}" --preset conan-${{ matrix.conan_preset }}

    - name: Build
      run: |
        cmake --build --preset conan-${{ matrix.conan_preset }}
        cmake -E make_directory ${{github.workspace}}/install/SEDManager
        cmake --install ${{github.workspace}}/build/${{ matrix.conan_preset }} --prefix '${{github.workspace}}/install/SEDManager'

    - name: Test
      run: ${{github.workspace}}/build/${{ matrix.conan_preset }}/bin/Test

    - name: Upload artifact binary
      uses: actions/upload-artifact@v4
      with:
        name: SEDManager-${{ matrix.build_profile }}
        path: '${{github.workspace}}/install/SEDManager'
        if-no-files-found: error

  build-test-flutter:
    strategy:
      fail-fast: false
      matrix:
        flutter_target: [windows, linux]
        include:
          - flutter_target: linux
            os: ubuntu-latest
            binary_path: build/linux/x64/release/bundle
            core_profile: clang20d
          - flutter_target: windows
            os: windows-latest
            binary_path: build/windows/x64/runner/Release
            core_profile: msvc20d
      
    name: flutter-${{ matrix.flutter_target }}
    needs: [build-test-core]
    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.9'
          channel: 'stable'
      
      - name: Install native compilers
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
            sudo add-apt-repository ppa:ubuntu-toolchain-r/test
            sudo apt update
  
            sudo apt install ninja-build
            sudo apt install gcc-13 g++-13
            sudo apt install libgtk-3-dev
            sudo update-alternatives --remove-all gcc || true
            sudo update-alternatives --remove-all g++ || true
            sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 10 --slave /usr/bin/g++ g++ /usr/bin/g++-13

      - name: "Download core"
        uses: actions/download-artifact@v4
        with:
          name: SEDManager-${{ matrix.core_profile }}
          path: ${{github.workspace}}/core_binary

      - name: "Install core"
        run: |
          cp ${{github.workspace}}/core_binary/*SEDManagerCAPI* ${{github.workspace}}/src/SEDManagerGUI/

      - name: "Install GUI Dart dependencies"
        working-directory: ${{github.workspace}}/src/SEDManagerGUI
        run: flutter pub get

      - name: "Test GUI"
        working-directory: ${{github.workspace}}/src/SEDManagerGUI
        run: flutter test

      - name: "Build GUI"
        working-directory: ${{github.workspace}}/src/SEDManagerGUI
        run: flutter build ${{matrix.flutter_target}} --release

      - name: "Upload artifact binary"
        uses: actions/upload-artifact@v4
        with:
          name: SEDManagerGUI-${{matrix.flutter_target}}
          path: "${{github.workspace}}/src/SEDManagerGUI/${{matrix.binary_path}}"
          if-no-files-found: error
